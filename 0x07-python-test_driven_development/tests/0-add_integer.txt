check ```add_integer function```
""" Check each error """
-----------------------

    >>> __import__('0-add_integer').__doc__ != None
    True

    >>> add_integer = __import__('0-add_integer').add_integer

    >>> add_integer.__doc__ != None
    True

    >>> add_integer(2, 1)
    3
    >>> add_integer(90, 8)
    98
    >>> add_integer(100)
    198

    >>> add_integer(-1, 2)
    1
    >>> add_integer(-3, -6)
    -9
    >>> add_integer(3, -2)
    1
    >>> add_integer(-1)
    97

    >>> add_integer(8j, 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(8, 561j)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(3j)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(20.3)
    118
    >>> add_integer(10, 22.2)
    32
    >>> add_integer(-10, 22.2)
    12
    >>> add_integer(-10.5)
    87

Float infinitive:

    >>> add_integer(float('inf'), 3)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Pass String Chech arg 1 (a):

    >>> add_integer("Hello")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Check 1 argument and numb:

    >>> add_integer("Hello", 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(0, "Hello")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Diferent that 2 arguments:

    >>> add_integer(0, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Not arguments passed:

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Argument None passed:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
