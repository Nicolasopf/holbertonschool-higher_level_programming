The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------:

    ### Import os for testing contents of the file e.g.,
    ### os.popen('cat -e 0-add_integer.py | tail -1').read()[-1]
    >>> import os

    ### Test 1: Import add_integer from 0-add_integer module.
    >>> add_integer = __import__('0-add_integer').add_integer

    ### Test 2: Both ints.
    >>> add_integer(1, 2)
    3

    ### Test 3: One negative
    >>> add_integer(100, -2)
    98

    ### Test 4: Only one int.
    >>> add_integer(2)
    100

    ### Test 5: One float.
    >>> add_integer(100.3, -2)
    98

    ### Test 6: Str in (b) argument.
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    ### Test 7: None
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    ### Test 8: Complex type
    >>> add_integer(3j)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    ### Test 9: No args given.
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    ### Test 10: Too large of a number.
    >>> add_integer(1, 10e+1000)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    ### Test 11: Two Floats.
    >>> add_integer(100.3, -100.3)
    0

    ### Test 12: Str in (a) argument.
    >>> add_integer("C was fun", -100.3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    ### Test 13: Three arguments
    >>> add_integer(0, 1, 2)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    ### Test 14: New line at the end of the file.
    >>> os.popen('cat -e 0-add_integer.py | tail -1').read()[-1]
    '\n'

    ### Test 16: File contains the proper shebang.
    >>> os.popen('cat 0-add_integer.py | head -1').read()
    '#!/usr/bin/python3\n'

    ### Test 17: No error from pep8
    >>> os.popen("pep8 0-add_integer.py").read()
    ''